# GitHub Actions workflow name
name: Java CI with Maven (Build Plugin)

# Controls when the workflow will run
on:
  push:
    branches: [ "main", "master" ] # Runs on pushes to main or master branch
  pull_request:
    branches: [ "main", "master" ] # Runs on pull requests targeting main or master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v4 # Use a recent version

      # Step 2: Set up JDK. Paper 1.20+ requires Java 17+
      # Your pom.xml might specify 1.8 for compatibility, but compilation needs 17+
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin' # Popular distribution
          cache: maven # Automatically cache Maven dependencies

      # Step 3: Build with Maven
      # 'verify' runs tests and package. Use 'package' if you don't have tests yet.
      # -B runs in batch mode (non-interactive)
      - name: Build with Maven
        run: mvn -B verify --file pom.xml # Use 'verify' to include tests, or 'package' just to build JAR

      # Step 4: (Optional) Upload the built JAR artifact
      # This allows you to download the compiled plugin JAR from the Actions run page
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: SandsOfTime-Plugin-JAR # Name of the artifact zip file on GitHub Actions
          path: target/SoT-*.jar # Path to the JAR file (adjust if your artifactId/version changes naming)
          if-no-files-found: error # Fail the step if the JAR isn't found
